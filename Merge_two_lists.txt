
// Singly-linked lists are already defined with this interface:
// class ListNode<T> {
//   ListNode(T x) {
//     value = x;
//   }
//   T value;
//   ListNode<T> next;
// }
//
ListNode<Integer> mergeTwoLinkedLists(ListNode<Integer> l1, ListNode<Integer> l2) {

    ListNode head = new ListNode(-1);
    ListNode prev = head;
    
    if(l1 == null)
    {
        return l2;
    }
    
    if(l2 == null)
    {
        return l1;
    }
    
    while(l1 != null || l2 != null)
    {
        if (l1 == null)
        {
            prev.next = l2;
            l2 = l2.next;
        }
        else if (l2 == null)
        {
            prev.next = l1;
            l1 = l1.next;
        }
        else if(l1.value <= l2.value)
        {
           prev.next = l1 ;
           l1 = l1.next;
        }
        else
        {
            prev.next = l2;
            l2 = l2.next;
        }
        
        prev = prev.next;
    }
    
    prev.next = (l1 == null) ? l2 : l1;
    return head.next;
}
